server:
  port: 9090
spring:
  thymeleaf:
    cache: false
  application:
    name: index-service
  zipkin:
    base-url: http://localhost:8089
  sleuth:
    sampler:
      probability: 1.0

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8081/eureka/,http://localhost:8082/eureka/
    registry-fetch-interval-seconds: 30
  instance:
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
product-service:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
#改变轮询策略
#    com.netflix.loadbalancer.RoundRobinRule ：轮询策略
#    com.netflix.loadbalancer.RandomRule ：随机策略
#    com.netflix.loadbalancer.WeightedResponseTimeRule ：权重策略
#    com.netflix.loadbalancer.BestAvailableRule ：最佳策略。遍历所有的服务实例，过滤掉故障实例，并返回请求 数小的实例返回。
#    com.netflix.loadbalancer.AvailabilityFilteringRule ：可用过滤策略。过滤掉故障和请求数超过阈值的服务 实例，再从剩下的实例中轮询调用。
feign:
  compression:
    request:
      enabled: true
    response:
      enabled: true
  hystrix:
    enabled: true
logging:
  level:
    root: info
    org.springframework.web.servlet.DispatcherServlet: DEBUG
    org.springframework.cloud.sleuth: DEBUG


hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: ExecutionIsolationStrategy.SEMAPHORE #信号量隔离（处理不完的请求直接丢弃）
          # ExecutionIsolationStrategy.THREAD 线程池隔离 (处理不完的请求进入等待队列，可应对高并发)
          thread:
            timeoutInMilliseconds: 3000 #默认的连接超时时间1秒,若1秒没有返回数据,自动的触发降级逻辑
      circuitBreaker:
        enabled: true
        requestVolumeThreshold: 5 #触发熔断的最小请求次数，默认20
        errorThresholdPercentage: 10 #触发熔断的失败请求最小占比，默认50%
        sleepWindowInMilliseconds: 10000 #熔断多少秒后去尝试请求，默认是5S
management:
  endpoints:
    web:
      exposure:
        include: '*'